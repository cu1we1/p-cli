@import "./utilities/normalize.scss";
@import "./themes/index.scss";
@import "./utilities/others.scss";
@import "./utilities/flex.scss";
@import "./functions/index.scss";
@import "./colorUI.scss";

@include themify(initThemes($oppo, $oppoDark)) {
  $clBorder: themed("clb");
  $clLightBorder: themed("cllb");
  $clBodyFill: themed("clbf");
  $clPrice: themed("clm");
  $clPicFill: themed("cli");
  $clBgFillS: themed("clbfs");

  & {
    background-color: transparent;
  }

  &.bg_fill {
    background-color: $clBodyFill;
  }

  .bg_fill_s {
    background-color: $clBgFillS;
  }

  // .fill_bg {
  //   &::before {
  //     background: linear-gradient(to left, transparent, $clBodyFill 100%);
  //   }

  //   &::after {
  //     background: linear-gradient(to left, $clBodyFill, transparent 100%);
  //   }
  // }

  .local_dev {
    background: linear-gradient(43deg, rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.3));
    backdrop-filter: blur(45px);
  }

  .gs_button_normal {
    font-weight: 700;
    font-size: 14px;
    line-height: 28px;
    text-align: center;
    color: #2660f5;
    width: 52px;
    height: 28px;
    border-radius: 14px;
    background-color: rgba(38, 96, 245, 0.1);
  }

  .gs_dark {
    .gs_card_bg_color {
      background-color: rgba(0, 0, 0, 0.3) !important;
    }

    .card_box {
      background-color: rgba(0, 0, 0, 0.3) !important;
      border-radius: 14px;
      margin: 0px 10px 10px 10px;
      padding: 10px 14px 10px 14px;
    }

    .gs_related_search_bg {
      background-color: rgba(0, 0, 0, 0.3);
    }
  }

  .gs_related_search_bg {
    background-color: rgba(255, 255, 255, 0.15);
  }

  .gs_card_bg_color {
    background-color: themed("cbc") !important;
  }

  .card_box {
    background-color: themed("cbc") !important;
    border-radius: 14px;
    margin: 0px 10px 10px 10px;
    padding: 10px 14px 10px 14px;
  }

  .gs_card_wrapper {
    border-radius: 14px;
    margin: 0px 10px 10px 10px;
    padding: 10px 14px 16px 14px;
  }

  .card_title {
    height: 28px;
    margin-bottom: 10px;
    font-size: 12px;
    line-height: 28px;
    color: themed("fcldark");
    font-weight: 700;
  }

  .white_bgcl {
    width: 100vw;
    min-height: 100vh;
    background-color: $clBodyFill;
  }
  // 给图片统一添加0.3px边框
  .gs_icon_border {
    position: relative;
    &::after {
      content: "";
      position: absolute;
      width: 300%;
      height: 300%;
      top: 0;
      left: 0;
      transform-origin: 0 0;
      border: 1px solid rgba(0, 0, 0, 0.1);
      transform: scale(0.3333, 0.3333);
      box-sizing: border-box;
      border-radius: 27px;
    }
  }

  .bg_mwlabg {
    background-color: themed("mwlabg");
  }

  .bg_primary {
    background-color: themed("clp");
  }

  .bg_darkest {
    background-color: themed("fcdarkest");
  }

  .bg_normal {
    background-color: themed("fcnormal");
  }

  .bg_otherFill {
    background-color: themed("clo");
  }

  .bg_border {
    background-color: $clBorder;
  }

  .bg_picFill {
    background-color: $clPicFill;
  }

  .bg_cardFill {
    background-color: themed("cbc");
  }

  .bg_bodyFill {
    background-color: $clBodyFill;
  }

  .bg_lotteryFill {
    background-color: themed("cllf");
  }

  .bg_inputBc {
    background-color: themed("clib");
  }

  .bg_inputHover:hover {
    background-color: themed("clih");
  }

  .bg_primary {
    background-color: themed("clp");
  }

  .bg_douban {
    background-color: themed("cld");
  }

  .bg_vip {
    background-color: themed("clv");
  }

  .bg_price {
    background-color: $clPrice;
  }

  .bg_button {
    background-color: themed("clbtn");
  }

  .cl_primary {
    color: themed("clp") !important;
  }

  .cl_douban {
    color: themed("cld");
  }

  .cl_vip {
    color: themed("clv");
  }

  .cl_white {
    color: themed("clbf");
  }

  .cl_price {
    color: $clPrice;
  }

  .cl_serialize {
    color: themed("cls");
  }

  .bdc {
    border-color: $clBorder;
  }

  .bdl_1 {
    border: 1px solid $clLightBorder;
  }

  .bd_1 {
    border: 1px solid $clBorder;
  }

  .clb_1 {
    border: 1px solid themed("clb-1");
  }

  .bdb_1 {
    position: relative;

    &::after {
      content: "";
      position: absolute;
      z-index: 1;
      height: 1px;
      left: 0;
      bottom: 0;
      right: 0;
      transform: scaleY(0.5);
      background-color: $clBorder;
    }
  }

  .cl_darkest {
    color: themed("fcdarkest");
  }

  .cl_darker {
    color: themed("fcdarker");
  }

  .cl_dark {
    color: themed("fcdark");
  }

  .cl_ldark {
    color: themed("fcldark");
  }

  .cl_normal {
    color: themed("fcnormal");
  }

  .cl_light {
    color: themed("fclight");
  }

  .cl_lighter {
    color: themed("fclighter");
  }

  .cli_darkest {
    color: themed("fcidarkest");
  }

  .cli_darker {
    color: themed("fcidarker");
  }

  .cli_dark {
    color: themed("fcidark");
  }

  .cli_normal {
    color: themed("fcinormal");
  }

  .cli_light {
    color: themed("fcilight");
  }

  .cli_lighter {
    color: themed("fcilighter");
  }

  .cl_inputHolder::-webkit-input-placeholder {
    color: themed("fclighter");
  }
}

@include themifyCommon(initThemesCm($oppoCm)) {
  .fs_xs {
    font-size: themedCm("fsxs");
    line-height: themedCm("lhxs");
  }

  .fs_s {
    font-size: themedCm("fss");
    line-height: themedCm("lhs");
  }

  .fs_m {
    font-size: themedCm("fsm");
    line-height: themedCm("lhm");
  }

  .fs_xm {
    font-size: themedCm("fsxm");
    line-height: themedCm("lhxm");
  }

  .fs_l {
    font-size: themedCm("fsl");
    line-height: themedCm("lhl");
  }

  .fs_xl {
    font-size: themedCm("fsxl");
    line-height: themedCm("lhxl");
  }

  .fs_xxl {
    font-size: themedCm("fsxxl");
    line-height: themedCm("lhxxl");
  }

  .fs_xxxl {
    font-size: themedCm("fsxxxl");
  }

  .fw_bold {
    font-weight: themedCm("fwbold");
  }

  .fw_medium {
    font-weight: themedCm("fwmedium");
  }

  .fw_normal {
    font-weight: themedCm("fwnormal");
  }

  .fw_light {
    font-weight: themedCm("fwlight");
  }

  .cl_inputHolder::-webkit-input-placeholder {
    font-weight: themedCm("fwmedium");
  }

  $dir: (top, right, bottom, left);
  $size: (
    0: 0,
    xxxxs: themedCm("spxxxxs"),
    xxxs: themedCm("spxxxs"),
    xxs: themedCm("spxxs"),
    xs: themedCm("spxs"),
    s: themedCm("sps"),
    m: themedCm("spm"),
    l: themedCm("spl"),
    xl: themedCm("spxl"),
    xxl: themedCm("spxxl"),
    xxxl: themedCm("spxxxl"),
    xxxxl: themedCm("spxxxxl")
  );

  @each $k, $v in $size {
    .mi_#{$k} {
      margin: #{$v}px;
    }

    .pd_#{$k} {
      padding: #{$v}px;
    }
  }

  @each $d in $dir {
    @each $k, $v in $size {
      .mi_#{$d}-#{$k} {
        margin-#{$d}: #{$v}px;
      }

      // todo
      // .mi_#{$d}--#{$k} {
      //   margin-#{$d}: -#{$v};
      // }
      .pd_#{$d}-#{$k} {
        padding-#{$d}: #{$v}px;
      }
    }
  }

  .mi_left--xxxl {
    margin-left: -#{themedCm("spxxxl")}px;
  }

  .mi_right--xxxl {
    margin-right: -#{themedCm("spxxxl")}px;
  }

  .pd_left--xxxl {
    padding-left: -#{themedCm("spxxxl")}px;
  }

  .pd_right--xxxl {
    padding-right: -#{themedCm("spxxxl")}px;
  }

  $brdir: (top-left, top-right, bottom-left, bottom-right);
  $brsize: (
    circle: themedCm("brcircle"),
    xl: themedCm("brxl"),
    l: themedCm("brl"),
    m: themedCm("brm"),
    s: themedCm("brs"),
    xs: themedCm("brxs"),
    xxs: themedCm("brxxs"),
    0: 0
  );

  @each $kbr, $vbr in $brsize {
    .br_#{$kbr} {
      border-radius: $vbr;
    }
  }

  @each $d in $brdir {
    @each $k, $v in $brsize {
      .br_#{$d}-#{$k} {
        border-#{$d}-radius: $v $v;
      }
    }
  }
}
